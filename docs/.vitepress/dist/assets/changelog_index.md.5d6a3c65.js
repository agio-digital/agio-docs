import{_ as s,c as n,o as a,a as e}from"./chunks/framework.9152ff1a.js";const l=JSON.parse('{"title":"Changelog","description":"","frontmatter":{},"headers":[],"relativePath":"changelog/index.md","filePath":"changelog/index.md"}'),p={name:"changelog/index.md"},o=[e('<h1 id="changelog" tabindex="-1">Changelog <a class="header-anchor" href="#changelog" aria-label="Permalink to &quot;Changelog&quot;">​</a></h1><h2 id="version-1-1-6" tabindex="-1">Version 1.1.6 <a class="header-anchor" href="#version-1-1-6" aria-label="Permalink to &quot;Version 1.1.6&quot;">​</a></h2><p><em>(no breaking changes)</em></p><ol><li>Moved docs to <a href="https://docs.agiodigital.com" target="_blank" rel="noreferrer">docs.agiodigital.com</a></li></ol><h2 id="version-1-1-5" tabindex="-1">Version 1.1.5 <a class="header-anchor" href="#version-1-1-5" aria-label="Permalink to &quot;Version 1.1.5&quot;">​</a></h2><p><em>(no breaking changes)</em></p><ol><li>devDep: generated updated types for <code>ClientUserQueryResult</code>, <code>ClientQueryResult</code> and <code>ClientUserSubscriptionResult</code> (doesn&#39;t affect SDK)</li><li>devDep: ability to run npm scripts codegen sub-commands <code>yarn codegen:download</code>, <code>yarn codegen:generare</code>, <code>yarn codegen</code> (doesn&#39;t affect SDK)</li><li>devDep: import types with type keyword. ex: <code>import type { foo } from &#39;bar&#39;</code> (doesn&#39;t affect SDK)</li><li><strong>SDK:</strong> it is recommended to use type <code>SdkConfig</code> instead of <code>Config</code> for better intellisense support. <code>Config</code> is marked as deprecated</li><li><strong>SDK:</strong> added new properties to <code>SdkConfig</code> interface. Use these to initialize the SDK widget with selected language, KYC/KYB, address disabled alternative KYC flow</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">config</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SdkConfig</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// ...other properties</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> 2-letter ISO 639-1 language code, case-insensitive</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> &quot;en&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> &quot;pt-BR&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">  */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  lang?: string</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> disable wallet address input field, preventing user from changing it</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> true</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  walletAddressDisabled</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> boolean;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> use KYB flow instead of KYC</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> true</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  kyb</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> boolean;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> use alternative KYC level</span></span>\n<span class="line"><span style="color:#6A737D;">   * In case a user can&#39;t provide a valid ID document (passport), the alternative KYC level can be used</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> false</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  useAlternativeKycLevel</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> boolean;</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">config</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SdkConfig</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// ...other properties</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> 2-letter ISO 639-1 language code, case-insensitive</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> &quot;en&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">  * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> &quot;pt-BR&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">  */</span></span>\n<span class="line"><span style="color:#24292E;">  lang?: string</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> disable wallet address input field, preventing user from changing it</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> true</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#24292E;">  walletAddressDisabled</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> boolean;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> use KYB flow instead of KYC</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> true</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#24292E;">  kyb</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> boolean;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> use alternative KYC level</span></span>\n<span class="line"><span style="color:#6A737D;">   * In case a user can&#39;t provide a valid ID document (passport), the alternative KYC level can be used</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> false</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#24292E;">  useAlternativeKycLevel</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> boolean;</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>',8)];const t=s(p,[["render",function(s,e,l,p,t,c){return a(),n("div",null,o)}]]);export{l as __pageData,t as default};
