import{u as s}from"./chunks/useNpmVersion.e848724a.js";import{q as a,c as n,o,a as l}from"./chunks/framework.07408668.js";const p=[l('<h1 id="getting-the-init-token" tabindex="-1">Getting the Init Token <a class="header-anchor" href="#getting-the-init-token" aria-label="Permalink to &quot;Getting the Init Token&quot;">​</a></h1><p>To get the initiation token for the KYC SDK, you need to execute the <code>generateKycSdkInitToken</code> GraphQL mutation.</p><p><strong>Note: This mutation should be called from a backend service.</strong></p><p>Always call this mutation from a backend service. Never call this mutation from the frontend. If you call this mutation from the frontend, you will expose your API token to the public. This will allow anyone to generate initiation tokens for your API token.</p><h3 id="base-url" tabindex="-1">Base URL: <a class="header-anchor" href="#base-url" aria-label="Permalink to &quot;Base URL:&quot;">​</a></h3><pre><code>- **production:** `https://hasura.agiodigital.com/v1/graphql`\n- **development:** `https://dev.hasura.agiodigital.com/v1/graphql`\n</code></pre><h2 id="graphql-mutation" tabindex="-1">GraphQL Mutation: <a class="header-anchor" href="#graphql-mutation" aria-label="Permalink to &quot;GraphQL Mutation:&quot;">​</a></h2><div class="language-graphql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">graphql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">mutation</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">generateKycSdkInitToken</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">input</span><span style="color:#E1E4E8;">: {</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">apiToken</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;a66bdfbe-ba27-4741-9365-3ee7b3b5c0e2&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">externalUserId</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;john_doe_01&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">amount</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">ttl</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5400</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">externalUserFirstName</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;John&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">externalUserLastName</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;Doe&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">externalUserEmail</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;example@email.com&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">currency</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;BSD&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  })</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">mutation</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">generateKycSdkInitToken</span><span style="color:#24292E;">(</span><span style="color:#E36209;">input</span><span style="color:#24292E;">: {</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">apiToken</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;a66bdfbe-ba27-4741-9365-3ee7b3b5c0e2&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">externalUserId</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;john_doe_01&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">amount</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">ttl</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">5400</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">externalUserFirstName</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;John&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">externalUserLastName</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;Doe&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">externalUserEmail</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;example@email.com&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">currency</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;BSD&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  })</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="using-curl" tabindex="-1">Using CURL: <a class="header-anchor" href="#using-curl" aria-label="Permalink to &quot;Using CURL:&quot;">​</a></h2><p>For <strong>Production</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-X</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">POST</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>\n<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">-H</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Content-Type: application/json&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>\n<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">--data</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;{&quot;query&quot;:&quot;mutation { generateKycSdkInitToken(input: { apiToken: \\&quot;a66bdfbe-ba27-4741-9365-3ee7b3b5c0e2\\&quot;, externalUserId: \\&quot;john_doe_01\\&quot;, amount: 100, ttl: 5400, externalUserFirstName: \\&quot;John\\&quot;, externalUserLastName: \\&quot;Doe\\&quot;, externalUserEmail: \\&quot;example@email.com\\&quot;, currency: \\&quot;BSD\\&quot;, }) }&quot;}&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>\n<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">https://hasura.agiodigital.com/v1/graphql</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-X</span><span style="color:#24292E;"> </span><span style="color:#032F62;">POST</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>\n<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">-H</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Content-Type: application/json&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>\n<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">--data</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;{&quot;query&quot;:&quot;mutation { generateKycSdkInitToken(input: { apiToken: \\&quot;a66bdfbe-ba27-4741-9365-3ee7b3b5c0e2\\&quot;, externalUserId: \\&quot;john_doe_01\\&quot;, amount: 100, ttl: 5400, externalUserFirstName: \\&quot;John\\&quot;, externalUserLastName: \\&quot;Doe\\&quot;, externalUserEmail: \\&quot;example@email.com\\&quot;, currency: \\&quot;BSD\\&quot;, }) }&quot;}&#39;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>\n<span class="line"><span style="color:#24292E;">     </span><span style="color:#032F62;">https://hasura.agiodigital.com/v1/graphql</span></span></code></pre></div><p>For <strong>Development</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">curl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-X</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">POST</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>\n<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">-H</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Content-Type: application/json&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>\n<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#79B8FF;">--data</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;{&quot;query&quot;:&quot;mutation { generateKycSdkInitToken(input: { apiToken: \\&quot;a66bdfbe-ba27-4741-9365-3ee7b3b5c0e2\\&quot;, externalUserId: \\&quot;john_doe_01\\&quot;, amount: 100, ttl: 5400, externalUserFirstName: \\&quot;John\\&quot;, externalUserLastName: \\&quot;Doe\\&quot;, externalUserEmail: \\&quot;example@email.com\\&quot;, currency: \\&quot;BSD\\&quot;, }) }&quot;}&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>\n<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">https://dev.hasura.agiodigital.com/v1/graphql</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">curl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-X</span><span style="color:#24292E;"> </span><span style="color:#032F62;">POST</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>\n<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">-H</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Content-Type: application/json&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>\n<span class="line"><span style="color:#24292E;">     </span><span style="color:#005CC5;">--data</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;{&quot;query&quot;:&quot;mutation { generateKycSdkInitToken(input: { apiToken: \\&quot;a66bdfbe-ba27-4741-9365-3ee7b3b5c0e2\\&quot;, externalUserId: \\&quot;john_doe_01\\&quot;, amount: 100, ttl: 5400, externalUserFirstName: \\&quot;John\\&quot;, externalUserLastName: \\&quot;Doe\\&quot;, externalUserEmail: \\&quot;example@email.com\\&quot;, currency: \\&quot;BSD\\&quot;, }) }&quot;}&#39;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>\n<span class="line"><span style="color:#24292E;">     </span><span style="color:#032F62;">https://dev.hasura.agiodigital.com/v1/graphql</span></span></code></pre></div><h2 id="using-axios" tabindex="-1">Using Axios: <a class="header-anchor" href="#using-axios" aria-label="Permalink to &quot;Using Axios:&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> axios </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;axios&#39;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// For Production</span></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">BASE_URL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;https://hasura.agiodigital.com/v1/graphql&#39;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// For Development</span></span>\n<span class="line"><span style="color:#6A737D;">// const BASE_URL = &#39;https://dev.hasura.agiodigital.com/v1/graphql&#39;;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">axios.</span><span style="color:#B392F0;">post</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">BASE_URL</span><span style="color:#E1E4E8;">, {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  query: </span><span style="color:#9ECBFF;">`</span></span>\n<span class="line"><span style="color:#9ECBFF;">    mutation {</span></span>\n<span class="line"><span style="color:#9ECBFF;">      generateKycSdkInitToken(input: {</span></span>\n<span class="line"><span style="color:#9ECBFF;">        apiToken: &quot;a66bdfbe-ba27-4741-9365-3ee7b3b5c0e2&quot;,</span></span>\n<span class="line"><span style="color:#9ECBFF;">        externalUserId: &quot;john_doe_01&quot;,</span></span>\n<span class="line"><span style="color:#9ECBFF;">        amount: 100,</span></span>\n<span class="line"><span style="color:#9ECBFF;">        ttl: 5400,</span></span>\n<span class="line"><span style="color:#9ECBFF;">        externalUserFirstName: &quot;John&quot;,</span></span>\n<span class="line"><span style="color:#9ECBFF;">        externalUserLastName: &quot;Doe&quot;,</span></span>\n<span class="line"><span style="color:#9ECBFF;">        externalUserEmail: &quot;example@email.com&quot;,</span></span>\n<span class="line"><span style="color:#9ECBFF;">        currency: &quot;BSD&quot;,</span></span>\n<span class="line"><span style="color:#9ECBFF;">      })</span></span>\n<span class="line"><span style="color:#9ECBFF;">    }</span></span>\n<span class="line"><span style="color:#9ECBFF;">  `</span></span>\n<span class="line"><span style="color:#E1E4E8;">}).</span><span style="color:#B392F0;">then</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">response</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(response.data);</span></span>\n<span class="line"><span style="color:#E1E4E8;">}).</span><span style="color:#B392F0;">catch</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">error</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Error:&quot;</span><span style="color:#E1E4E8;">, error);</span></span>\n<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> axios </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;axios&#39;</span><span style="color:#24292E;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// For Production</span></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">BASE_URL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;https://hasura.agiodigital.com/v1/graphql&#39;</span><span style="color:#24292E;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D;">// For Development</span></span>\n<span class="line"><span style="color:#6A737D;">// const BASE_URL = &#39;https://dev.hasura.agiodigital.com/v1/graphql&#39;;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">axios.</span><span style="color:#6F42C1;">post</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">BASE_URL</span><span style="color:#24292E;">, {</span></span>\n<span class="line"><span style="color:#24292E;">  query: </span><span style="color:#032F62;">`</span></span>\n<span class="line"><span style="color:#032F62;">    mutation {</span></span>\n<span class="line"><span style="color:#032F62;">      generateKycSdkInitToken(input: {</span></span>\n<span class="line"><span style="color:#032F62;">        apiToken: &quot;a66bdfbe-ba27-4741-9365-3ee7b3b5c0e2&quot;,</span></span>\n<span class="line"><span style="color:#032F62;">        externalUserId: &quot;john_doe_01&quot;,</span></span>\n<span class="line"><span style="color:#032F62;">        amount: 100,</span></span>\n<span class="line"><span style="color:#032F62;">        ttl: 5400,</span></span>\n<span class="line"><span style="color:#032F62;">        externalUserFirstName: &quot;John&quot;,</span></span>\n<span class="line"><span style="color:#032F62;">        externalUserLastName: &quot;Doe&quot;,</span></span>\n<span class="line"><span style="color:#032F62;">        externalUserEmail: &quot;example@email.com&quot;,</span></span>\n<span class="line"><span style="color:#032F62;">        currency: &quot;BSD&quot;,</span></span>\n<span class="line"><span style="color:#032F62;">      })</span></span>\n<span class="line"><span style="color:#032F62;">    }</span></span>\n<span class="line"><span style="color:#032F62;">  `</span></span>\n<span class="line"><span style="color:#24292E;">}).</span><span style="color:#6F42C1;">then</span><span style="color:#24292E;">(</span><span style="color:#E36209;">response</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(response.data);</span></span>\n<span class="line"><span style="color:#24292E;">}).</span><span style="color:#6F42C1;">catch</span><span style="color:#24292E;">(</span><span style="color:#E36209;">error</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Error:&quot;</span><span style="color:#24292E;">, error);</span></span>\n<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div>',15)],e=JSON.parse('{"title":"Getting the Init Token","description":"","frontmatter":{"footer":false},"headers":[],"relativePath":"guide/v2.md","filePath":"guide/v2.md"}'),t={name:"guide/v2.md"},r=Object.assign(t,{setup(l){const{load:e,version:t}=s();return a((()=>{e()})),(s,a)=>(o(),n("div",null,p))}});export{e as __pageData,r as default};
