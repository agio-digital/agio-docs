import{_ as s,c as n,o as a,a as l}from"./chunks/framework.c7d5eb2d.js";const p=JSON.parse('{"title":"TypeScript Support","description":"","frontmatter":{},"headers":[],"relativePath":"typescript/types.md","filePath":"typescript/types.md"}'),o={name:"typescript/types.md"},e=[l('<h1 id="typescript-support" tabindex="-1">TypeScript Support <a class="header-anchor" href="#typescript-support" aria-label="Permalink to &quot;TypeScript Support&quot;">​</a></h1><h3 id="the-sdkconfig-interface" tabindex="-1">The <code>SdkConfig</code> interface <a class="header-anchor" href="#the-sdkconfig-interface" aria-label="Permalink to &quot;The `SdkConfig` interface&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> `import { SdkConfig } from &quot;agio-sdk&quot;` */</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SdkConfig</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> user id in your database</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> &quot;example-9ebc4a1a&quot; */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">externalUserId</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> your Agio SDK API token</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> &quot;00000000-0000-0000-0000-000000000000&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   * */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">apiToken</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> pre-fill wallet address</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> &quot;0x0000000000000000000000000000000000000000&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   * */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">walletAddress</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> pre-fill cleanWallet input. With this setting the Agio SDK doesn&#39;t runs an AML report</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> true</span></span>\n<span class="line"><span style="color:#6A737D;">   * */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">cleanWallet</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> disable wallet address input field, preventing user from changing it</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> true</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">walletAddressDisabled</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> id of the initial step</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> &quot;status&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   * */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">step</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> querySelector string of the element the widget will be mounted to</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> &quot;#iframe&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   * */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">element</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Element</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> use KYB flow instead of KYC</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> true</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">kyb</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> use alternative KYC level</span></span>\n<span class="line"><span style="color:#6A737D;">   * In case a user can&#39;t provide a valid ID document (passport), the alternative KYC level can be used</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> false</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">useAlternativeKycLevel</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> callbacks</span></span>\n<span class="line"><span style="color:#6A737D;">   * */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">on</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Partial</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">CallbacksConfig</span><span style="color:#E1E4E8;">&gt;;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> callbacks object for handling user data changes, errors, and loading</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@defaultValue</span><span style="color:#6A737D;"> &quot;production&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   * */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">environment</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Environment</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> overwrite iframe base URL, for testing purposes only */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">appBaseUrl</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> 2-letter ISO 639-1 language code, case-insensitive</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> &quot;en&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> &quot;pt-BR&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">lang</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">webSocketImpl</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ClientOptions</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&quot;webSocketImpl&quot;</span><span style="color:#E1E4E8;">];</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> 2-letter ISO 639-1 language code, case-insensitive</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> &quot;en&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> &quot;pt-BR&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">lang</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> disable wallet address input field, preventing user from changing it</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> true</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">walletAddressDisabled</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> use KYB flow instead of KYC</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> true</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">kyb</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@description</span><span style="color:#6A737D;"> use alternative KYC level</span></span>\n<span class="line"><span style="color:#6A737D;">   * In case a user can&#39;t provide a valid ID document (passport), the alternative KYC level can be used</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> false</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">useAlternativeKycLevel</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/** </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> `import { SdkConfig } from &quot;agio-sdk&quot;` */</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SdkConfig</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> user id in your database</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> &quot;example-9ebc4a1a&quot; */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">externalUserId</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> your Agio SDK API token</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> &quot;00000000-0000-0000-0000-000000000000&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   * */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">apiToken</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> pre-fill wallet address</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> &quot;0x0000000000000000000000000000000000000000&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   * */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">walletAddress</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> pre-fill cleanWallet input. With this setting the Agio SDK doesn&#39;t runs an AML report</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> true</span></span>\n<span class="line"><span style="color:#6A737D;">   * */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">cleanWallet</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> disable wallet address input field, preventing user from changing it</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> true</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">walletAddressDisabled</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> id of the initial step</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> &quot;status&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   * */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">step</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> querySelector string of the element the widget will be mounted to</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> &quot;#iframe&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   * */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">element</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Element</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> use KYB flow instead of KYC</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> true</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">kyb</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> use alternative KYC level</span></span>\n<span class="line"><span style="color:#6A737D;">   * In case a user can&#39;t provide a valid ID document (passport), the alternative KYC level can be used</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> false</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">useAlternativeKycLevel</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> callbacks</span></span>\n<span class="line"><span style="color:#6A737D;">   * */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">on</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Partial</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">CallbacksConfig</span><span style="color:#24292E;">&gt;;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> callbacks object for handling user data changes, errors, and loading</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@defaultValue</span><span style="color:#6A737D;"> &quot;production&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   * */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">environment</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Environment</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/** </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> overwrite iframe base URL, for testing purposes only */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">appBaseUrl</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> 2-letter ISO 639-1 language code, case-insensitive</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> &quot;en&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> &quot;pt-BR&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">lang</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">webSocketImpl</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ClientOptions</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&quot;webSocketImpl&quot;</span><span style="color:#24292E;">];</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> 2-letter ISO 639-1 language code, case-insensitive</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> &quot;en&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> &quot;pt-BR&quot;</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">lang</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> disable wallet address input field, preventing user from changing it</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> true</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">walletAddressDisabled</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> use KYB flow instead of KYC</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> true</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">kyb</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/**</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@description</span><span style="color:#6A737D;"> use alternative KYC level</span></span>\n<span class="line"><span style="color:#6A737D;">   * In case a user can&#39;t provide a valid ID document (passport), the alternative KYC level can be used</span></span>\n<span class="line"><span style="color:#6A737D;">   * </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> false</span></span>\n<span class="line"><span style="color:#6A737D;">   */</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">useAlternativeKycLevel</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="the-sdkstate-interface" tabindex="-1">The <code>SdkState</code> interface <a class="header-anchor" href="#the-sdkstate-interface" aria-label="Permalink to &quot;The `SdkState` interface&quot;">​</a></h2><p>The <strong><code>SdkState</code></strong> interface represents the state of the Agio SDK. It includes a number of properties that can be accessed after the SDK has been initialized, including:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/** </span><span style="color:#F97583;">@example</span><span style="color:#6A737D;"> `import { SdkState } from &quot;agio-sdk&quot;` */</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SdkState</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">config</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SdkConfig</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">iframe</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HTMLIFrameElement</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">unloadIframe</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> (() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">void</span><span style="color:#E1E4E8;">);</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">on</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Partial</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">CallbacksConfig</span><span style="color:#E1E4E8;">&gt;;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">globalConfig</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">GlobalConfig</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">subscription</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Subscription</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">mounted</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">clientUserQueryResult</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ClientUserQueryResult</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">clientUserSubscriptionResult</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ClientUserSubscriptionResult</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">setElement</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">element</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">void</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">mount</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">config</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SdkConfig</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SdkState</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">unmount</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SdkState</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/** </span><span style="color:#D73A49;">@example</span><span style="color:#6A737D;"> `import { SdkState } from &quot;agio-sdk&quot;` */</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SdkState</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">config</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SdkConfig</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">iframe</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HTMLIFrameElement</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">unloadIframe</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> (() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">void</span><span style="color:#24292E;">);</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">on</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Partial</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">CallbacksConfig</span><span style="color:#24292E;">&gt;;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">globalConfig</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">GlobalConfig</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">subscription</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Subscription</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">mounted</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">clientUserQueryResult</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ClientUserQueryResult</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">clientUserSubscriptionResult</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ClientUserSubscriptionResult</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">setElement</span><span style="color:#24292E;">(</span><span style="color:#E36209;">element</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">void</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">mount</span><span style="color:#24292E;">(</span><span style="color:#E36209;">config</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SdkConfig</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SdkState</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">unmount</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SdkState</span><span style="color:#24292E;">;</span></span>\n<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="example-usage" tabindex="-1">Example usage <a class="header-anchor" href="#example-usage" aria-label="Permalink to &quot;Example usage&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createAgioSdk, SdkConfig, SdkState } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;agio-sdk&quot;</span><span style="color:#E1E4E8;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">config</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SdkConfig</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>\n<span class="line"><span style="color:#E1E4E8;">  element: </span><span style="color:#9ECBFF;">&quot;#iframe&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  externalUserId: </span><span style="color:#9ECBFF;">&quot;your-company-user-id-9eb&quot;</span><span style="color:#E1E4E8;">,</span></span>\n<span class="line"><span style="color:#E1E4E8;">  apiToken: </span><span style="color:#9ECBFF;">&quot;00000000-0000-0000-0000-000000000000&quot;</span></span>\n<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//...etc</span></span>\n<span class="line"><span style="color:#E1E4E8;">};</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">sdk</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SdkState</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createAgioSdk</span><span style="color:#E1E4E8;">(config);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createAgioSdk, SdkConfig, SdkState } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;agio-sdk&quot;</span><span style="color:#24292E;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">config</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SdkConfig</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>\n<span class="line"><span style="color:#24292E;">  element: </span><span style="color:#032F62;">&quot;#iframe&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  externalUserId: </span><span style="color:#032F62;">&quot;your-company-user-id-9eb&quot;</span><span style="color:#24292E;">,</span></span>\n<span class="line"><span style="color:#24292E;">  apiToken: </span><span style="color:#032F62;">&quot;00000000-0000-0000-0000-000000000000&quot;</span></span>\n<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//...etc</span></span>\n<span class="line"><span style="color:#24292E;">};</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sdk</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SdkState</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createAgioSdk</span><span style="color:#24292E;">(config);</span></span></code></pre></div>',8)];const t=s(o,[["render",function(s,l,p,o,t,c){return a(),n("div",null,e)}]]);export{p as __pageData,t as default};
